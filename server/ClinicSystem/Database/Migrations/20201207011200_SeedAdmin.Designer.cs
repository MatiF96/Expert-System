// <auto-generated />
using System;
using ClinicSystem.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ClinicSystem.Database.Migrations
{
    [DbContext(typeof(ClinicDbContext))]
    [Migration("20201207011200_SeedAdmin")]
    partial class SeedAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClinicSystem.Database.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("account_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime?>("AccountBirthdate")
                        .HasColumnType("date")
                        .HasColumnName("account_birthdate");

                    b.Property<string>("AccountFullname")
                        .HasColumnType("text")
                        .HasColumnName("account_fullname");

                    b.Property<string>("AccountLogin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_login");

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_password");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_type");

                    b.HasKey("AccountId");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            AccountId = -1,
                            AccountFullname = "ofiOZJVxHpyu76gOTfW6sez8g9Y28VtqWDrZncfZAMFV63SY9rE91O/apj4ATT6r0t2dl9sdZn+IvnbiTLsvG68T1YiwS+ZC4g8oy91/wnaN3xjjGta35ljOrGr/DtOcyL6DcMcbFyTdqqVQhLeLbKcDcNdnmBItaJYu1yE+vA6OoRmZ4pUaJHwD+RXaiTWU6taIXpP1B3YiM3+pgCD0+JJDBBZkkBcd2oyB5zRBS6fQPLXRIQQ4oV39kHqIU1ZAkYBSc6cdBYLIcHcmk49KmosiyiaC2AhzA24NsUgDnMPee1h+pTrYhY3g7dsXIuQo7Pzy+VBfvAikaxu8/olVAQ==",
                            AccountLogin = "admin123",
                            AccountPassword = "i8cZhvSH898XlrwNtWmgXBmEFWaZXn1W3bbnzSQQB4mBkvgFYldPz3VDwWJEKgNxuDtTxs/zn1Q1WFKBwuVJtA5bQs7CRkPFvvxDAwQD6c2ELRikNxCRlmVByzMYZfkc2cEbmlaf1FqoxdcSglK2dMpbgaqLMrLy/+J9ucYWbb/ab1zgjr41EKMgPChfntJwNzjFbnJQ5JNOscHalVDn+ZFkm1nogfo8Rj/CQbeSTsky/o4aOGx0uAMZ+aXIIzYFKD/PddAE/qvawwRPJ8RzDYudRTt2fjGeWbZt20EHHUoLEERXGuTDMNSEshLlUbNoK5jVhqbQ9Eo3/4cRotzM6A==",
                            AccountType = "Admin"
                        });
                });

            modelBuilder.Entity("ClinicSystem.Database.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appointment_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("date")
                        .HasColumnName("appointment_date");

                    b.Property<int>("AppointmentDoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appointment_doctor_id");

                    b.Property<int>("AppointmentPatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appointment_patient_id");

                    b.HasKey("AppointmentId");

                    b.HasIndex(new[] { "AppointmentDoctorId" }, "fki_doctor_id");

                    b.HasIndex(new[] { "AppointmentPatientId" }, "fki_patient_id");

                    b.ToTable("appointments");
                });

            modelBuilder.Entity("ClinicSystem.Database.Appointment", b =>
                {
                    b.HasOne("ClinicSystem.Database.Account", "AppointmentDoctor")
                        .WithMany("AppointmentAppointmentDoctors")
                        .HasForeignKey("AppointmentDoctorId")
                        .HasConstraintName("doctor_id")
                        .IsRequired();

                    b.HasOne("ClinicSystem.Database.Account", "AppointmentPatient")
                        .WithMany("AppointmentAppointmentPatients")
                        .HasForeignKey("AppointmentPatientId")
                        .HasConstraintName("patient_id")
                        .IsRequired();

                    b.Navigation("AppointmentDoctor");

                    b.Navigation("AppointmentPatient");
                });

            modelBuilder.Entity("ClinicSystem.Database.Account", b =>
                {
                    b.Navigation("AppointmentAppointmentDoctors");

                    b.Navigation("AppointmentAppointmentPatients");
                });
#pragma warning restore 612, 618
        }
    }
}
